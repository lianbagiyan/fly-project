[{"/home/liana/lian/fly-project/src/index.tsx":"1","/home/liana/lian/fly-project/src/reportWebVitals.ts":"2","/home/liana/lian/fly-project/src/App.tsx":"3","/home/liana/lian/fly-project/src/icons/FlyIcon.tsx":"4","/home/liana/lian/fly-project/src/components/pages/SignUp.tsx":"5","/home/liana/lian/fly-project/src/components/pages/SignIn.tsx":"6","/home/liana/lian/fly-project/src/components/pages/LeftSide.tsx":"7"},{"size":500,"mtime":1612961810000,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1612961810000,"results":"10","hashOfConfig":"9"},{"size":591,"mtime":1613381505276,"results":"11","hashOfConfig":"9"},{"size":1642,"mtime":1613374941540,"results":"12","hashOfConfig":"9"},{"size":5123,"mtime":1613381803816,"results":"13","hashOfConfig":"9"},{"size":3388,"mtime":1613380158022,"results":"14","hashOfConfig":"9"},{"size":1097,"mtime":1613380035017,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1n27nse",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"/home/liana/lian/fly-project/src/index.tsx",[],["33","34"],"/home/liana/lian/fly-project/src/reportWebVitals.ts",[],"/home/liana/lian/fly-project/src/App.tsx",[],"/home/liana/lian/fly-project/src/icons/FlyIcon.tsx",[],"/home/liana/lian/fly-project/src/components/pages/SignUp.tsx",[],"/home/liana/lian/fly-project/src/components/pages/SignIn.tsx",["35"],"import React from \"react\";\nimport \"antd/dist/antd.css\";\nimport styled from \"styled-components\";\nimport { Row, Col } from \"antd\";\nimport { FC } from \"react\";\nimport LeftSide from \"./LeftSide\";\nimport { Form, Input, Button } from \"antd\";\nimport imgURL from \"../../assets/img/kingdom-11.png\";\nimport { Typography } from \"antd\";\n\nconst { Text, Link, Title } = Typography;\n\nconst SignIn: FC = () => {\n  function clickHandler() {\n    console.log(\"Button clicked\");\n  }\n\n  return (\n    <>\n      <Row>\n        <Col span={6}>\n          <LeftSide imgURL={imgURL} />\n        </Col>\n        <Col span={18}>\n          <ContentBox>\n            <TopLine>\n              <Row justify=\"end\">\n                <Col>\n                  <Text style={{ fontSize: \"16px\", paddingRight: \"16px\" }}>\n                    Not a member?\n                  </Text>\n                  <Text type=\"success\">\n                    <Link href=\"/signup\" style={{ fontSize: \"16px\" }}>\n                      Sign up\n                    </Link>\n                  </Text>\n                </Col>\n              </Row>\n            </TopLine>\n            <SignUpBox>\n              <FormContainer>\n                <Form\n                  name=\"normal_login\"\n                  initialValues={{\n                    remember: true,\n                  }}\n                >\n                  <Title\n                    level={3}\n                    style={{ textAlign: \"center\", fontWeight: \"normal\" }}\n                  >\n                    Sign in to Fly\n                  </Title>\n                  <Form.Item\n                    label=\"Email\"\n                    labelCol={{ span: 24 }}\n                    rules={[\n                      {\n                        required: true,\n                        message: \"Please input your Email!\",\n                      },\n                    ]}\n                  >\n                    <Input type=\"email\" style={{ padding: \"8px 12px\" }} />\n                  </Form.Item>\n\n                  <Form.Item\n                    label=\"Password\"\n                    labelCol={{ span: 24 }}\n                    rules={[\n                      {\n                        required: true,\n                        message: \"Please input your Password!\",\n                      },\n                    ]}\n                  >\n                    <Input.Password\n                      type=\"password\"\n                      style={{ padding: \"8px 12px\" }}\n                    />\n                    <a href=\"\">Forgot password?</a>\n                  </Form.Item>\n\n                  <Form.Item>\n                    <Button\n                      block\n                      size=\"large\"\n                      type=\"primary\"\n                      htmlType=\"submit\"\n                      onClick={clickHandler}\n                    >\n                      Sign in\n                    </Button>\n                  </Form.Item>\n                </Form>\n              </FormContainer>\n            </SignUpBox>\n          </ContentBox>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default SignIn;\n\nconst ContentBox = styled.section`\n  height: 100vh;\n  background: #e8e8e8;\n`;\n\nconst TopLine = styled.div`\n  margin-right: 42px;\n  padding-top: 48px;\n`;\n\nconst SignUpBox = styled.div`\n  height: 82vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst FormContainer = styled.div`\n  width: 420px;\n`;\n","/home/liana/lian/fly-project/src/components/pages/LeftSide.tsx",["36"],"import \"antd/dist/antd.css\";\nimport styled from \"styled-components\";\nimport FlyIcon from \"../../icons/FlyIcon\";\nimport { Typography } from \"antd\";\n\nconst { Text } = Typography;\n\ntype Props = {\n  imgURL: string;\n};\n\nexport default function LeftSide(props: Props) {\n  const { imgURL } = props;\n  return (\n    <>\n      <Section>\n        <Block>\n          <FlyIcon />\n          <Text\n            style={{\n              display: \"block\",\n              maxWidth: \"300px\",\n              fontSize: \"20px\",\n              paddingTop: \"16px\",\n              color: \"white\",\n            }}\n          >\n            Follow your interests & hear what people are talking about.\n          </Text>\n        </Block>\n        <ImgContainer>\n          <img width={348} height={366} src={imgURL} />\n        </ImgContainer>\n      </Section>\n    </>\n  );\n}\n\nconst Section = styled.section`\n  height: 100vh;\n  background: #000c17;\n`;\n\nconst Block = styled.div`\n  padding: 48px 0 0 48px;\n`;\n\nconst ImgContainer = styled.div`\n  height: calc(100% - 304px);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":81,"column":21,"nodeType":"43","endLine":81,"endColumn":32},{"ruleId":"44","severity":1,"message":"45","line":32,"column":11,"nodeType":"43","endLine":32,"endColumn":56},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]